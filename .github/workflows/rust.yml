name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to Heroku Container registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache-docker
      with:
        path: /tmp/docker-save
        # Key is named differently to avoid collision
        key: ${{ runner.os }}-docker-${{ hashFiles('Cargo.lock') }}-${{ hashFiles('Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker

    - run: docker load -i /tmp/docker-save/snapshot.tar || true

    - name: Build first stage
      run: docker build -t build --target build .

    - name: Build and push to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push -a cb-rust-demo web

    - run: >
        mkdir -p /tmp/docker-save &&
        docker save build -o /tmp/docker-save/snapshot.tar &&
        ls -lh /tmp/docker-save || true

    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a cb-rust-demo web 
 
    

